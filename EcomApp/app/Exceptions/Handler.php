<?php

namespace App\Exceptions;

use App\Services\Logging\LoggerHelper;
use Illuminate\Auth\AuthenticationException;
use Illuminate\Database\Eloquent\ModelNotFoundException;
use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Illuminate\Http\Response;
use Throwable;

class Handler extends ExceptionHandler
{
    /**
     * The list of the inputs that are never flashed to the session on validation exceptions.
     *
     * @var array<int, string>
     */
    protected $dontFlash = [
        'current_password',
        'password',
        'password_confirmation',
    ];

    /**
     * Register the exception handling callbacks for the application.
     */
    public function register(): void
    {
        $this->reportable(function (Throwable $e) {
            //
        });
    }

    public function render($request, Throwable $e)
    {
        if ($e instanceof ModelNotFoundException)
        {
            return response()->json([
                'error_code' => 'RESOURCE_NOT_FOUND',
                'message' => 'Resource not found'
            ], 404);
        }

        if ($e instanceof AuthenticationException) {
            return response()->json([
                'error_code' => 'UNAUTHORIZED',
                'message' => 'Unauthorized'
            ], Response::HTTP_UNAUTHORIZED);
        }

        return parent::render($request, $e); // TODO: Change the autogenerated stub
    }

    protected function context()
    {
        try {
            $request = request();
            return LoggerHelper::createLogContext($request);
        } catch (\Throwable $e) {
            return parent::context();
        }
    }
}
